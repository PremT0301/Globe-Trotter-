// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  passwordHash  String    @map("password_hash")
  profilePhoto  String?   @map("profile_photo")
  languagePref  String?   @map("language_pref")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  trips         Trip[]
}

model Trip {
  id           Int        @id @default(autoincrement())
  userId       Int        @map("user_id")
  tripName     String     @map("trip_name")
  description  String?
  startDate    DateTime   @map("start_date")
  endDate      DateTime   @map("end_date")
  coverPhoto   String?    @map("cover_photo")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")

  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  itineraries  Itinerary[]
  budget       Budget?
  sharedTrips  SharedTrip[]

  @@index([userId])
}

model City {
  id              Int         @id @default(autoincrement())
  name            String
  country         String
  costIndex       Float?      @map("cost_index")
  popularityScore Float?      @map("popularity_score")

  activities      Activity[]
  itineraries     Itinerary[]

  @@index([name, country])
  @@unique([name, country], map: "city_name_country_unique")
}

model Activity {
  id          Int        @id @default(autoincrement())
  cityId      Int        @map("city_id")
  name        String
  type        String
  cost        Decimal?   @db.Decimal(10, 2)
  duration    Int?
  description String?
  imageUrl    String?    @map("image_url")

  city        City       @relation(fields: [cityId], references: [id], onDelete: Cascade)
  itineraries Itinerary[]

  @@index([cityId])
}

model Itinerary {
  id         Int        @id @default(autoincrement())
  tripId     Int        @map("trip_id")
  cityId     Int        @map("city_id")
  date       DateTime
  activityId Int?       @map("activity_id")
  orderIndex Int        @map("order_index")

  trip       Trip       @relation(fields: [tripId], references: [id], onDelete: Cascade)
  city       City       @relation(fields: [cityId], references: [id], onDelete: Cascade)
  activity   Activity?  @relation(fields: [activityId], references: [id], onDelete: SetNull)

  @@index([tripId, date])
  @@unique([tripId, date, orderIndex])
}

model Budget {
  id                   Int       @id @default(autoincrement())
  tripId               Int       @unique @map("trip_id")
  totalEstimatedCost   Decimal?  @map("total_estimated_cost") @db.Decimal(12, 2)
  transportCost        Decimal?  @map("transport_cost") @db.Decimal(12, 2)
  accommodationCost    Decimal?  @map("accommodation_cost") @db.Decimal(12, 2)
  activitiesCost       Decimal?  @map("activities_cost") @db.Decimal(12, 2)
  dailyAverageCost     Decimal?  @map("daily_average_cost") @db.Decimal(12, 2)

  trip                 Trip      @relation(fields: [tripId], references: [id], onDelete: Cascade)
}

model SharedTrip {
  id         Int       @id @default(autoincrement())
  tripId     Int       @map("trip_id")
  publicUrl  String    @map("public_url") @unique
  shareDate  DateTime  @map("share_date") @default(now())

  trip       Trip      @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@index([tripId])
}

model AdminStat {
  id          Int       @id @default(autoincrement())
  metricName  String    @map("metric_name")
  metricValue Float     @map("metric_value")
  date        DateTime

  @@index([metricName, date])
}
